CREATE TABLE "HR"."MEMBER" 
   (	"ID" VARCHAR2(100), 
	"PW" VARCHAR2(100), 
	"NAME" VARCHAR2(100), 
	"TEL" VARCHAR2(100)
	)

CREATE TABLE "HR"."BBS" 
   (	"no" VARCHAR2(100), 
	"TITLE" VARCHAR2(100), 
	"CONTENT" VARCHAR2(100), 
	"WRITER" VARCHAR2(100)
	)

CREATE TABLE PRODUCT
	(
	ID VARCHAR2(200),
	NAME VARCHAR2(200),
	CONTENT VARCHAR2(200),
	PRICE VARCHAR2(200),
	COMPANY VARCHAR2(200),
	IMG VARCHAR2(200)
	)

-- 저장할 대상: 엔티티(회원정보, 게시판, 상품), 엔티티간의 관계: 회원이 상품을 주문하다(주문정보)
-- 엔티티 + 관계 => 테이블로

CREATE TABLE ORDERLIST (
	"no" VARCHAR2(100),
	MEMBER_ID VARCHAR2(100),
	PRODUCT_ID VARCHAR2(100),
	TOTAL_COUNT VARCHAR2(100)
)

SELECT * FROM DEPART

SELECT * FROM STUDENT

SELECT * FROM SUBJECT

CREATE TABLE "HR"."BBS2" 
   (	"no" VARCHAR2(100), 
	"TITLE" VARCHAR2(100), 
	"CONTENT" VARCHAR2(100), 
	"WRITER" VARCHAR2(100), 
	CONSTRAINT "BBS_PK22" PRIMARY KEY ("no"),
  	CONSTRAINT "FK_MEMBER22" FOREIGN KEY ("WRITER")
	REFERENCES "HR"."MEMBER" ("ID")
)

CREATE TABLE "HR"."BBS3" 
   (	"no" VARCHAR2(100), 
	"TITLE" VARCHAR2(100), 
	"CONTENT" VARCHAR2(100), 
	"WRITER" VARCHAR2(100)
)

ALTER TABLE HR.BBS3
ADD CONSTRAINT BBS3_PK PRIMARY KEY ("no")

ALTER TABLE HR.BBS3
ADD CONSTRAINT FK_MEMBER33 FOREIGN KEY (WRITER)
REFERENCES HR."MEMBER"(ID);


CREATE TABLE "HR"."DEPART2" (	
	id VARCHAR2(100), 
	name VARCHAR2(100), 
	instructor VARCHAR2(100), 
	CONSTRAINT "DEPART_PK2" PRIMARY KEY ("ID")
)

CREATE TABLE "HR"."STUDENT2" (	
    id VARCHAR2(100), 
	name VARCHAR2(100), 
	tel VARCHAR2(100), 
	depart_id VARCHAR2(100)
)

ALTER TABLE "STUDENT2"
ADD CONSTRAINT STUDENT2_PK PRIMARY KEY ("ID")

ALTER TABLE "HR"."STUDENT2"
ADD CONSTRAINT "FK_DEPART22" FOREIGN KEY ("DEPART_ID")
REFERENCES "HR"."DEPART2" ("ID");

--테이블 복사

CREATE TABLE member22
AS SELECT * FROM member

INSERT INTO member22 
VALUES ('banana3', 'banana3', 'banana3', 'banana3', sysdate)

SELECT * FROM member22

INSERT INTO member22 
VALUES ('banana4', 'banana4', 'banana4', 'banana4', sysdate, 'aaa')

INSERT INTO BBS
VALUES (bbs_id_seq.nextval, 'happy', 'happy day', 'ice')

SELECT * FROM bbs

INSERT INTO BBS
VALUES (bbs_id_seq.nextval, 'happy2', 'happy day2', 'ice')

CREATE SEQUENCE pd_id_seq INCREMENT BY 1 START WITH 1

CREATE TABLE product2 (
	id number(38, 0),
	name varchar2(100)
)

INSERT INTO PRODUCT2 
VALUES (pd_id_seq.nextval, 'shoes')

SELECT * FROM PRODUCT2 ORDER BY id 


CREATE TABLE orderlist3(
	id number(38, 0),
	title varchar2(100),
	price number(38, 0)
)

CREATE SEQUENCE or_seq INCREMENT BY 1 START WITH 1

INSERT INTO orderlist3
VALUES (or_seq.nextval, 'apple', 2000)

SELECT * FROM orderlist3 
WHERE id >= 3
ORDER BY id DESC 

CREATE TABLE DEPT (
	DEPTNO NUMBER(2),
	DNAME VARCHAR2(14 BYTE),
	LOC VARCHAR2(13 BYTE)
)

CREATE TABLE EMP (
	EMPNO NUMBER(4),
	ENAME VARCHAR2(10 BYTE),
	JOB VARCHAR2(9 BYTE),
	MGR NUMBER(4),
	HIREDATE DATE,
	SAL NUMBER(7,2),
	COMM NUMBER(7,2),
	DEPTNO NUMBER(2)
)

CREATE TABLE SALGRADE (
	GRADE NUMBER,
	LOSAL NUMBER,
	HISAL NUMBER
)

ALTER TABLE DEPT ADD (
CONSTRAINT PK_DEPT
PRIMARY KEY (DEPTNO));

ALTER TABLE EMP ADD (
CONSTRAINT PK_EMP
PRIMARY KEY (EMPNO));

ALTER TABLE EMP ADD (
CONSTRAINT FK_DEPTNO
FOREIGN KEY (DEPTNO)
REFERENCES DEPT (DEPTNO));

SELECT * FROM EMP

SELECT deptno FROM EMP -- projection

SELECT DISTINCT deptno FROM EMP

SELECT ename, sal * 12 AS yearsal FROM emp 

SELECT * FROM emp
ORDER BY sal DESC 

SELECT * FROM emp
WHERE DEPTNO = 30
ORDER BY EMPNO DESC 

SELECT * FROM emp
WHERE NOT DEPTNO = 30
ORDER BY EMPNO DESC 

SELECT * FROM emp
WHERE DEPTNO = 30 AND JOB = 'SALESMAN'

SELECT * FROM emp
WHERE DEPTNO = 30 or JOB = 'SALESMAN'

SELECT * FROM emp
WHERE sal >= 3000

SELECT * FROM emp
WHERE sal != 3000

SELECT * FROM emp
WHERE JOB IN ('SALESMAN', 'MANAGER')
ORDER BY JOB 

SELECT * FROM emp
WHERE JOB NOT IN ('SALESMAN', 'MANAGER')
ORDER BY JOB 

SELECT * FROM emp
WHERE sal BETWEEN 2000 AND 3000 
ORDER BY EMPNO 

SELECT * FROM emp
WHERE sal NOT BETWEEN 2000 AND 3000 
ORDER BY EMPNO 

SELECT * FROM emp
WHERE ENAME LIKE '_L%'

SELECT * FROM emp
WHERE ENAME NOT LIKE '_L%'

SELECT * FROM emp
WHERE COMM IS null

SELECT * FROM emp
WHERE COMM IS NOT null

CREATE TABLE dept_temp2 
AS SELECT * FROM dept

SELECT * FROM dept_temp2

UPDATE DEPT_TEMP2 
SET loc = 'SEOUL'

UPDATE DEPT_TEMP2 
SET dname = 'DATABASE', loc = 'BUSAN'
WHERE deptno = 40

DELETE FROM DEPT_TEMP2 
WHERE DNAME = 'SALES'


CREATE TABLE PRODUCT3
	(	"ID" VARCHAR2(200),
	"NAME" VARCHAR2(200),
	"CONTENT" VARCHAR2(200),
	"PRICE" NUMBER(38, 0),
	"COMPANY" VARCHAR2(200),
	"IMG" VARCHAR2(200)
)

SELECT * FROM PRODUCT3 ORDER BY price DESC 

SELECT NAME, CONTENT, PRICE FROM PRODUCT3 ORDER BY COMPANY 

SELECT DISTINCT company FROM PRODUCT3 

SELECT price * 5 AS price5 FROM PRODUCT3 

SELECT name, company FROM PRODUCT3 WHERE PRICE = 5000

SELECT name, price, company FROM PRODUCT3 WHERE PRICE BETWEEN 3000 AND 6000

SELECT COMPANY, NAME FROM PRODUCT3 WHERE NOT COMPANY = 'c100'

SELECT NAME, PRICE FROM PRODUCT3 WHERE COMPANY = 'c100' or COMPANY = 'c200'

SELECT * FROM PRODUCT3 WHERE name LIKE '%4'

SELECT * FROM PRODUCT3 WHERE CONTENT LIKE '%food%'

UPDATE PRODUCT3 
SET CONTENT = '품절'
WHERE price = 5000

UPDATE PRODUCT3 
SET IMG = '0.png', PRICE = 10000 
WHERE id = '100' OR id = '102'

DELETE FROM PRODUCT3
WHERE COMPANY = 'c100'

DELETE FROM PRODUCT3 





